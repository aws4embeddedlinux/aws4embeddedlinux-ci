// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmbeddedLinuxCodeBuildProjectStack Custom Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EmbeddedLinuxCodeBuildProject2101BD97": {
      "DependsOn": [
        "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5",
      ],
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": {
          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestkey784D0285Arn58FA9A21",
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_XLARGE",
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    4,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
                        },
                      ],
                    },
                  ],
                },
                ".dkr.ecr.",
                {
                  "Fn::Select": [
                    3,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
                        },
                      ],
                    },
                  ],
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                {
                  "Fn::ImportValue": "test-common:ExportsOutputReftestecr18D9BBA8F49E3A2C",
                },
                ":latest",
              ],
            ],
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "FileSystemLocations": [
          {
            "Identifier": "nfs",
            "Location": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
                  },
                  ".efs.eu-central-1.amazonaws.com:/",
                ],
              ],
            },
            "MountPoint": "/nfs",
            "Type": "EFS",
          },
        ],
        "LogsConfig": {
          "CloudWatchLogs": {
            "GroupName": {
              "Ref": "EmbeddedLinuxCodeBuildProjectLogs790B1140",
            },
            "Status": "ENABLED",
          },
        },
        "Name": "test-stack",
        "ServiceRole": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "build": {
      "commands": [
        "echo \\"DUMMY BUILDSPEC - can not be empty\\""
      ]
    }
  },
  "artifacts": {
    "files": [
      "**/*"
    ],
    "base-directory": "."
  }
}",
          "Type": "NO_SOURCE",
        },
        "TimeoutInMinutes": 240,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
            },
            {
              "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
            },
          ],
          "VpcId": {
            "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsMountTarget1BB9724D2": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsMountTarget270BB2C65": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65": {
      "Properties": {
        "GroupDescription": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroupfromteststackEmbeddedLinuxCodeBuildProjectSecurityGroup58F8D73B20499408861B": {
      "Properties": {
        "Description": "from teststackEmbeddedLinuxCodeBuildProjectSecurityGroup58F8D73B:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EmbeddedLinuxCodeBuildProjectLogs790B1140": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "test-stack-EmbeddedLinuxCodeBuildProjectLogs",
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49": {
      "DependsOn": [
        "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "",
              [
                "
import boto3
import json

ecr_client = boto3.client('ecr')
codepipeline_client = boto3.client('codepipeline')

def handler(event, context):
  print("Received event: " + json.dumps(event, indent=2))
  response = ecr_client.describe_images(repositoryName='",
                {
                  "Fn::ImportValue": "test-common:ExportsOutputReftestecr18D9BBA8F49E3A2C",
                },
                "', filter={'tagStatus': 'TAGGED'})
  for i in response['imageDetails']:
    if 'latest' in i['imageTags']:
      break
  else:
    print('OS image not found. Stopping execution.')
    response = codepipeline_client.stop_pipeline_execution(
    pipelineName=event['detail']['pipeline'],
    pipelineExecutionId=event['detail']['execution-id'],
    abandon=True,
    reason='OS image not found in ECR repository. Stopping pipeline until image is present.')
    ",
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC",
            "Arn",
          ],
        },
        "Runtime": "python3.10",
      },
      "Type": "AWS::Lambda::Function",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartLogRetentionC530B5EE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
              },
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleA197C004": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "execution-trigger": {
              "trigger-type": [
                "CreatePipeline",
              ],
            },
            "state": [
              "STARTED",
            ],
          },
          "detail-type": [
            "CodePipeline Pipeline Execution State Change",
          ],
          "source": [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleAllowEventRuleteststackEmbeddedLinuxCodeBuildProjectOSImageCheckOnStartDE4F09A20DAF4342": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleA197C004",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5",
        "Roles": [
          {
            "Ref": "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmbeddedLinuxCodeBuildProjectRole692E9BCD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSCodeBuildAdminAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmbeddedLinuxCodeBuildProjectRoleDefaultPolicyFE7F690E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EmbeddedLinuxCodeBuildProjectLogs790B1140",
                  "Arn",
                ],
              },
            },
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-central-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-central-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-central-1:111111111111:report-group/",
                    {
                      "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestkey784D0285Arn58FA9A21",
              },
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:DescribeSecurityGroups",
                "codestar-connections:GetConnection",
                "codestar-connections:GetConnectionToken",
                "codeconnections:GetConnectionToken",
                "codeconnections:GetConnection",
                "codeconnections:ListConnection",
                "codeconnections:UseConnection",
                "codebuild:ListConnectedOAuthAccounts",
                "codebuild:ListRepositories",
                "codebuild:PersistOAuthToken",
                "codebuild:ImportSourceCredentials",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmbeddedLinuxCodeBuildProjectRoleDefaultPolicyFE7F690E",
        "Roles": [
          {
            "Ref": "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B": {
      "Properties": {
        "GroupDescription": "Security Group to allow attaching EFS",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestvpc8985080ECidrBlockEB7C13CD",
            },
            "Description": "NFS Mount Port",
            "FromPort": 2049,
            "IpProtocol": "tcp",
            "ToPort": 2049,
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-eu-central-1",
          "S3Key": "arbitrary-file.ext",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`EmbeddedLinuxCodeBuildProjectStack Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EmbeddedLinuxCodeBuildProject2101BD97": {
      "DependsOn": [
        "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5",
      ],
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": {
          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestkey784D0285Arn58FA9A21",
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_XLARGE",
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    4,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
                        },
                      ],
                    },
                  ],
                },
                ".dkr.ecr.",
                {
                  "Fn::Select": [
                    3,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
                        },
                      ],
                    },
                  ],
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                {
                  "Fn::ImportValue": "test-common:ExportsOutputReftestecr18D9BBA8F49E3A2C",
                },
                ":latest",
              ],
            ],
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "FileSystemLocations": [
          {
            "Identifier": "nfs",
            "Location": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
                  },
                  ".efs.eu-central-1.amazonaws.com:/",
                ],
              ],
            },
            "MountPoint": "/nfs",
            "Type": "EFS",
          },
        ],
        "LogsConfig": {
          "CloudWatchLogs": {
            "GroupName": {
              "Ref": "EmbeddedLinuxCodeBuildProjectLogs790B1140",
            },
            "Status": "ENABLED",
          },
        },
        "Name": "test-stack",
        "ServiceRole": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "build": {
      "commands": [
        "echo \\"DUMMY BUILDSPEC - can not be empty\\""
      ]
    }
  },
  "artifacts": {
    "files": [
      "**/*"
    ],
    "base-directory": "."
  }
}",
          "Type": "NO_SOURCE",
        },
        "TimeoutInMinutes": 240,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
            },
            {
              "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
            },
          ],
          "VpcId": {
            "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsMountTarget1BB9724D2": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsMountTarget270BB2C65": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EmbeddedLinuxCodeBuildProjectFilesystem54E4C11F",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65": {
      "Properties": {
        "GroupDescription": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-stack/EmbeddedLinuxCodeBuildProjectFilesystem",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroupfromteststackEmbeddedLinuxCodeBuildProjectSecurityGroup58F8D73B20499408861B": {
      "Properties": {
        "Description": "from teststackEmbeddedLinuxCodeBuildProjectSecurityGroup58F8D73B:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectFilesystemEfsSecurityGroup64B52E65",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EmbeddedLinuxCodeBuildProjectLogs790B1140": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "test-stack-EmbeddedLinuxCodeBuildProjectLogs",
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49": {
      "DependsOn": [
        "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "",
              [
                "
import boto3
import json

ecr_client = boto3.client('ecr')
codepipeline_client = boto3.client('codepipeline')

def handler(event, context):
  print("Received event: " + json.dumps(event, indent=2))
  response = ecr_client.describe_images(repositoryName='",
                {
                  "Fn::ImportValue": "test-common:ExportsOutputReftestecr18D9BBA8F49E3A2C",
                },
                "', filter={'tagStatus': 'TAGGED'})
  for i in response['imageDetails']:
    if 'latest' in i['imageTags']:
      break
  else:
    print('OS image not found. Stopping execution.')
    response = codepipeline_client.stop_pipeline_execution(
    pipelineName=event['detail']['pipeline'],
    pipelineExecutionId=event['detail']['execution-id'],
    abandon=True,
    reason='OS image not found in ECR repository. Stopping pipeline until image is present.')
    ",
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC",
            "Arn",
          ],
        },
        "Runtime": "python3.10",
      },
      "Type": "AWS::Lambda::Function",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartLogRetentionC530B5EE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
              },
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartServiceRole886C2BCC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleA197C004": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "execution-trigger": {
              "trigger-type": [
                "CreatePipeline",
              ],
            },
            "state": [
              "STARTED",
            ],
          },
          "detail-type": [
            "CodePipeline Pipeline Execution State Change",
          ],
          "source": [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleAllowEventRuleteststackEmbeddedLinuxCodeBuildProjectOSImageCheckOnStartDE4F09A20DAF4342": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOSImageCheckOnStartA4649D49",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EmbeddedLinuxCodeBuildProjectOnPipelineStartRuleA197C004",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmbeddedLinuxCodeBuildProjectPolicyDocumentCDFD1ED5",
        "Roles": [
          {
            "Ref": "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmbeddedLinuxCodeBuildProjectRole692E9BCD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSCodeBuildAdminAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmbeddedLinuxCodeBuildProjectRoleDefaultPolicyFE7F690E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestecr18D9BBA8Arn6B304346",
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EmbeddedLinuxCodeBuildProjectLogs790B1140",
                  "Arn",
                ],
              },
            },
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet1Subnet865FB50A19DF49CF",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "test-common:ExportsOutputReftestvpcPrivateSubnet2Subnet23D3396F45FDAD97",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-central-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-central-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-central-1:111111111111:report-group/",
                    {
                      "Ref": "EmbeddedLinuxCodeBuildProject2101BD97",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestkey784D0285Arn58FA9A21",
              },
            },
            {
              "Action": [
                "ec2:DescribeSecurityGroups",
                "codestar-connections:GetConnection",
                "codestar-connections:GetConnectionToken",
                "codeconnections:GetConnectionToken",
                "codeconnections:GetConnection",
                "codeconnections:ListConnection",
                "codeconnections:UseConnection",
                "codebuild:ListConnectedOAuthAccounts",
                "codebuild:ListRepositories",
                "codebuild:PersistOAuthToken",
                "codebuild:ImportSourceCredentials",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmbeddedLinuxCodeBuildProjectRoleDefaultPolicyFE7F690E",
        "Roles": [
          {
            "Ref": "EmbeddedLinuxCodeBuildProjectRole692E9BCD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmbeddedLinuxCodeBuildProjectSecurityGroupB289294B": {
      "Properties": {
        "GroupDescription": "Security Group to allow attaching EFS",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::ImportValue": "test-common:ExportsOutputFnGetAtttestvpc8985080ECidrBlockEB7C13CD",
            },
            "Description": "NFS Mount Port",
            "FromPort": 2049,
            "IpProtocol": "tcp",
            "ToPort": 2049,
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "test-common:ExportsOutputReftestvpc8985080E5120E245",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-eu-central-1",
          "S3Key": "arbitrary-file.ext",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
